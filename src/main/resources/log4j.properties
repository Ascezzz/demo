
#############################################
#
# Log4J 日志输出
#############################################
#此句将等级为info的日志信息输出到console和file两个目的地toConsole和toFile
#名字可以随意命名
log4j.rootLogger=Console,DEBUG,error,INFO,DailyRollingFile,stdout


#可以使用任意编码格式
log4j.appender.file.encoding=UTF-8

#定义Console的输出类型   ConsoleAppender代表控制台
log4j.appender.Console=org.apache.log4j.ConsoleAppender
#定义Console输出端的layout类型      PatternLayout用于灵活地指定布局模块
log4j.appender.Console.Target=System.out
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
#若使用PatternLayout布局，就需要指定信息的具体格式
log4j.appender.Console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss}  %t:%r  %p - %l %m%n

#console #
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern =%d{yyyy-MM-dd HH:mm:ss}  %t:%r  %p - %l %m%n


#定义File的输出类型，FileAppender输出到指定的文件
#log4j.appender.File=org.apache.log4j.FileAppender
##定义toFile文件的输出端文件名
#log4j.appender.File.File=src/test/resources/log/FileAppender.log
##追加
#log4j.appender.File.append=true
#10g4j.appender.File.layout=org.apache.1og4j.PatternLayout
#10g4j.appender.File.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss}  %t:%r  %p - %l %m%n


#info
log4j.appender.INFO = org.apache.log4j.DailyRollingFileAppender
log4j.appender.INFO.File =src/main/resources/log/info.log
log4j.appender.INFO.Append = false
log4j.appender.INFO.Threshold = INFO
log4j.appender.INFO.DatePattern='.'yyyy-MM-dd
log4j.appender.INFO.layout = org.apache.log4j.PatternLayout
log4j.appender.INFO.layout.ConversionPattern =%d{yyyy-MM-dd HH:mm:ss}  %t:%r  %p - %l %m%n


log4j.logger.error=error
log4j.appender.error=org.apache.log4j.DailyRollingFileAppender
log4j.appender.error.layout=org.apache.log4j.PatternLayout
log4j.appender.error.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss}  %t:%r  %p - %l %m%n
log4j.appender.error.datePattern='.'yyyy-MM-dd
log4j.appender.error.Threshold = error
log4j.appender.error.append=true
log4j.appender.error.File=src/main/resources/log/error.log


log4j.logger.DEBUG=DEBUG
log4j.appender.DEBUG=org.apache.log4j.DailyRollingFileAppender
log4j.appender.DEBUG.layout=org.apache.log4j.PatternLayout
#  %t: 输出产生该日志事件的线程名  %r: 输出自应用启动到输出该log信息耗费的毫秒数
#  %c: 输出日志信息所属的类目，通常就是所在类的全名  %p: 输出日志信息优先级，即DEBUG，INFO，WARN，ERROR，FATAL
# %l: 输出日志事件的发生位置，相当于%C.%M(%F:%L)的组合,包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.Java:10)
log4j.appender.DEBUG.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss}  %t:%r  %p - %l %m%n
log4j.appender.DEBUG.datePattern='.'yyyy-MM-dd
log4j.appender.DEBUG.Threshold = DEBUG
log4j.appender.DEBUG.append=false
log4j.appender.DEBUG.File=src/main/resources/log/debug.log

#DailyRollingFile
log4j.appender.DailyRollingFile =org.apache.log4j.DailyRollingFileAppender
log4j.appender.DailyRollingFile.File = src/main/resources/log/DailyRollingFile.log
log4j.appender.DailyRollingFile.layout = org.apache.log4j.PatternLayout
log4j.appender.DailyRollingFile.layout.ConversionPattern =%d{yyyy-MM-dd HH:mm:ss}  %t:%r  %p - %l %m%n
log4j.appender.DailyRollingFile.append=false

#3 druid
log4j.logger.druid.sql=INFO
log4j.logger.druid.sql.DataSource=info
log4j.logger.druid.sql.Connection=info
log4j.logger.druid.sql.Statement=info
log4j.logger.druid.sql.ResultSet=info


#4 mybatis
log4j.logger.org.mybatis=INFO

log4j.logger.com.ibatis=INFO
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=INFO
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=INFO
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=INFO
log4j.logger.java.sql.Connection=INFO
log4j.logger.java.sql.Statement=INFO